/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Base: THREE.Mesh
    Bio: THREE.Mesh
    Contact: THREE.Mesh
    CV: THREE.Mesh
    Projects: THREE.Mesh
  }
  materials: {}
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/portfolio_home.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Base.geometry}
        material={nodes.Base.material}
        position={[-0.13, -0.29, 0]}
        scale={[4.79, 0.02, 4.79]}>
        <mesh
          geometry={nodes.Bio.geometry}
          material={nodes.Bio.material}
          position={[-0.04, 50, 0.72]}
          scale={[0.2, 50, 0.2]}
        />
        <mesh
          geometry={nodes.Contact.geometry}
          material={nodes.Contact.material}
          position={[0.76, 10, 0]}
          scale={[0.2, 10, 0.2]}
        />
        <mesh
          geometry={nodes.CV.geometry}
          material={nodes.CV.material}
          position={[-0.04, 50, -0.72]}
          scale={[0.2, 50, 0.2]}
        />
        <mesh
          geometry={nodes.Projects.geometry}
          material={nodes.Projects.material}
          position={[-0.4, 50, 0]}
          scale={[0.2, 50, 0.2]}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/portfolio_home.glb')
